import { AlertCircle, Mail, CheckCircle, Clock, Download } from 'lucide-react';

interface TimelineProps {
  scoreHistory: {
    date: string;
    score: number;
  }[];
  hasCredentials: boolean;
}

export function Timeline({ scoreHistory, hasCredentials }: TimelineProps) {
  if (!hasCredentials) {
    return (
      <div className="bg-white/5 border border-gray-800 rounded-xl p-6">
        <div className="flex items-center gap-2 mb-4">
          <div className="p-2 rounded-lg bg-yellow-500/10">
            <AlertCircle className="w-4 h-4 text-yellow-400" />
          </div>
          <h2 className="text-lg font-semibold text-white">Security Report History</h2>
        </div>
        <div className="text-center text-gray-400 py-8">
          Connect a provider to view email report history
        </div>
      </div>
    );
  }

  // Mock email report data - you can replace this with actual data
  const emailReports = [
    {
      id: 1,
      recipient: "security@company.com",
      subject: "Weekly Security Risk Report",
      date: "2024-01-15",
      status: "sent"
    },
    {
      id: 2,
      recipient: "admin@company.com",
      subject: "Monthly Security Assessment",
      date: "2024-01-08",
      status: "sent"
    },
    {
      id: 3,
      recipient: "security@company.com",
      subject: "Weekly Security Risk Report",
      date: "2024-01-01",
      status: "sent"
    },
    {
      id: 4,
      recipient: "admin@company.com",
      subject: "Monthly Security Assessment",
      date: "2023-12-25",
      status: "sent"
    },
    {
      id: 5,
      recipient: "security@company.com",
      subject: "Weekly Security Risk Report",
      date: "2023-12-18",
      status: "sent"
    }
  ];

  const downloadReport = (email: any) => {
    // Create report content
    const reportContent = `
Security Report

Recipient: ${email.recipient}
Subject: ${email.subject}
Date: ${new Date(email.date).toLocaleDateString()}
Status: ${email.status}

Report Details:
This is a security risk assessment report that was sent to ${email.recipient} on ${new Date(email.date).toLocaleDateString()}.

Generated by Shadlo Security Dashboard
    `.trim();

    // Create and download file
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `security-report-${email.recipient.split('@')[0]}-${email.date}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  return (
    <div className="bg-white/5 border border-gray-800 rounded-xl p-6">
      <div className="flex items-center gap-2 mb-6">
        <div className="p-2 rounded-lg bg-blue-500/10">
          <Mail className="w-4 h-4 text-blue-400" />
        </div>
        <h2 className="text-lg font-semibold text-white">Security Report History</h2>
      </div>
      
      <div className="space-y-4 max-h-96 overflow-y-auto pr-2 [&::-webkit-scrollbar]:w-1.5 [&::-webkit-scrollbar]:h-1.5 [&::-webkit-scrollbar-track]:bg-transparent [&::-webkit-scrollbar-thumb]:bg-gray-600 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb:hover]:bg-gray-500 [&::-webkit-scrollbar-corner]:bg-transparent [&::-webkit-scrollbar-track]:rounded-full [&::-webkit-scrollbar-track]:mx-1">
        {emailReports.map((email) => {
          return (
            <div key={email.id} className="bg-white/5 border border-gray-700 rounded-lg p-3 hover:bg-white/10 transition-colors">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center gap-2">
                  <Mail className="w-3 h-3 text-blue-400" />
                  <span className="font-medium text-white text-sm">{email.recipient}</span>
                </div>
                <div className="flex items-center gap-1">
                  <Clock className="w-3 h-3 text-gray-400" />
                  <span className="text-xs text-gray-400">{new Date(email.date).toLocaleDateString()}</span>
                </div>
              </div>
              
              <div className="mb-2">
                <h3 className="text-white font-medium text-sm mb-1">{email.subject}</h3>
                <p className="text-xs text-gray-400">Security risk assessment report</p>
              </div>
              
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-1 text-green-400">
                  <CheckCircle className="w-3 h-3" />
                  <span className="text-xs">Sent</span>
                </div>
                <button
                  onClick={() => downloadReport(email)}
                  className="inline-flex items-center gap-1 px-2 py-1 bg-gray-600 hover:bg-gray-700 border border-gray-500 rounded text-xs font-medium text-white transition-colors"
                  title="Download this report"
                >
                  <Download className="w-3 h-3" />
                  Download
                </button>
              </div>
            </div>
          );
        })}
      </div>
      
      {emailReports.length === 0 && (
        <div className="text-center text-gray-400 py-8">
          No email reports sent yet
        </div>
      )}
    </div>
  );
} 